version: "3.8"

services:
  bot:
    build:
      context: ./
      dockerfile: ./apps/bot/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    volumes:
      - logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "python3 /app/bot/healthcheck.py"]
      interval: 120s
      retries: 3
      start_period: 20s
      timeout: 5s

  website:
    build:
      context: ./
      dockerfile: ./apps/website/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    volumes:
      - logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "python3 /app/website/healthcheck.py"]
      interval: 60s
      retries: 4
      start_period: 20s
      timeout: 8s

  db:
    image: postgres:15.5-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 3s

volumes:
  postgres-data:
  logs: